diff --git a/v2ray-geodata/Makefile b/v2ray-geodata/Makefile
index 0881a12..b4054f8 100644
--- a/v2ray-geodata/Makefile
+++ b/v2ray-geodata/Makefile
@@ -12,24 +12,40 @@ PKG_MAINTAINER:=Tianling Shen <cnsztl@immortalwrt.org>
 
 include $(INCLUDE_DIR)/package.mk
 
-GEOIP_VER:=202503281421
-GEOIP_FILE:=geoip.dat.$(GEOIP_VER)
-define Download/geoip
-  URL:=https://github.com/v2fly/geoip/releases/download/$(GEOIP_VER)/
+GEO_VER:=202503032212
+GEOIP_FILE:=geoip.dat.$(GEO_VER)
+define Download/geoip-full
+  URL:=https://github.com/Loyalsoldier/v2ray-rules-dat/releases/download/$(GEO_VER)/
   URL_FILE:=geoip.dat
   FILE:=$(GEOIP_FILE)
-  HASH:=83337c712b04d8c16351cf5a5394eae5cb9cfa257fb4773485945dce65dcea76
+  HASH:=3007b647066a1c79badcc9cc62f38a6ec3522d39dfc2997a72f1fa775832cc75
 endef
 
-GEOSITE_VER:=20250329145339
-GEOSITE_FILE:=dlc.dat.$(GEOSITE_VER)
-define Download/geosite
-  URL:=https://github.com/v2fly/domain-list-community/releases/download/$(GEOSITE_VER)/
-  URL_FILE:=dlc.dat
+GEOSITE_FILE:=geosite.dat.$(GEO_VER)
+define Download/geosite-full
+  URL:=https://github.com/Loyalsoldier/v2ray-rules-dat/releases/download/$(GEO_VER)/
+  URL_FILE:=geosite.dat
   FILE:=$(GEOSITE_FILE)
-  HASH:=d0f0e5c954f65775d1f5b34a813a64cb8868ad61a78ea183386d5bf84b3c8fca
+  HASH:=4de20eba4f17c82e27fdeabdcd34f4c15cf8f05b6891a5a5ec4aca72741dd002
 endef
 
+GEOIP_LITE_FILE:=geoip-lite.dat.$(GEO_VER)
+define Download/geoip-lite
+  URL:=https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/
+  URL_FILE:=geoip-lite.dat
+  FILE:=$(GEOIP_LITE_FILE)
+  HASH:=skip
+endef
+
+GEOSITE_LITE_FILE:=geosite-lite.dat.$(GEO_VER)
+define Download/geosite-lite
+  URL:=https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/
+  URL_FILE:=geosite-lite.dat
+  FILE:=$(GEOSITE_LITE_FILE)
+  HASH:=skip
+endef
+ 
+
 define Package/v2ray-geodata/template
   SECTION:=net
   CATEGORY:=Network
@@ -38,42 +54,88 @@ define Package/v2ray-geodata/template
   PKGARCH:=all
 endef
 
-define Package/v2ray-geoip
+define Package/v2ray-geoip-lite
+  $(call Package/v2ray-geodata/template)
+  TITLE:=meta-rules-dat GeoIP List for V2Ray
+  VERSION:=$(GEO_VER).$(PKG_RELEASE)
+  LICENSE:=CC-BY-SA-4.0
+  DEFAULT_VARIANT:=1
+  VARIANT:=v2ray-geoip-lite
+  PROVIDES:=v2ray-geoip
+  CONFLICTS:=v2ray-geoip-full
+endef
+
+define Package/v2ray-geosite-lite
+  $(call Package/v2ray-geodata/template)
+  TITLE:=meta-rules-dat Geosite List for V2Ray
+  VERSION:=$(GEO_VER).$(PKG_RELEASE)
+  LICENSE:=MIT
+  DEFAULT_VARIANT:=1
+  VARIANT:=v2ray-geosite-lite
+  PROVIDES:=v2ray-geosite
+  CONFLICTS:=v2ray-geosite-full
+endef
+
+define Package/v2ray-geoip-full
   $(call Package/v2ray-geodata/template)
   TITLE:=GeoIP List for V2Ray
   VERSION:=$(GEOIP_VER).$(PKG_RELEASE)
   LICENSE:=CC-BY-SA-4.0
+  VARIANT:=v2ray-geoip-full
+  PROVIDES:=v2ray-geoip
+  # CONFLICTS:=v2ray-geoip
 endef
 
-define Package/v2ray-geosite
+define Package/v2ray-geosite-full
   $(call Package/v2ray-geodata/template)
   TITLE:=Geosite List for V2Ray
-  VERSION:=$(GEOSITE_VER).$(PKG_RELEASE)
+  VERSION:=$(GEO_VER).$(PKG_RELEASE)
   LICENSE:=MIT
+  VARIANT:=v2ray-geosite-full
+  PROVIDES:=v2ray-geosite
+  # CONFLICTS:=v2ray-geosite
 endef
 
 define Build/Prepare
 	$(call Build/Prepare/Default)
-ifneq ($(CONFIG_PACKAGE_v2ray-geoip),)
-	$(call Download,geoip)
+ifneq ($(CONFIG_PACKAGE_v2ray-geoip-lite),)
+	$(call Download,geoip-lite)
+endif
+ifneq ($(CONFIG_PACKAGE_v2ray-geosite-lite),)
+	$(call Download,geosite-lite)
 endif
-ifneq ($(CONFIG_PACKAGE_v2ray-geosite),)
-	$(call Download,geosite)
+ifneq ($(CONFIG_PACKAGE_v2ray-geoip-full),)
+	$(call Download,geoip-full)
+endif
+ifneq ($(CONFIG_PACKAGE_v2ray-geosite-full),)
+	$(call Download,geosite-full)
 endif
 endef
 
 define Build/Compile
 endef
 
-define Package/v2ray-geoip/install
+define Package/v2ray-geoip-lite/install
 	$(INSTALL_DIR) $(1)/usr/share/v2ray
 	$(INSTALL_DATA) $(DL_DIR)/$(GEOIP_FILE) $(1)/usr/share/v2ray/geoip.dat
 endef
 
-define Package/v2ray-geosite/install
+define Package/v2ray-geosite-lite/install
 	$(INSTALL_DIR) $(1)/usr/share/v2ray
 	$(INSTALL_DATA) $(DL_DIR)/$(GEOSITE_FILE) $(1)/usr/share/v2ray/geosite.dat
 endef
 
-$(eval $(call BuildPackage,v2ray-geoip))
-$(eval $(call BuildPackage,v2ray-geosite))
+define Package/v2ray-geoip-full/install
+	$(INSTALL_DIR) $(1)/usr/share/v2ray
+	$(INSTALL_DATA) $(DL_DIR)/$(GEOIP_LITE_FILE) $(1)/usr/share/v2ray/geoip.dat
+endef
+
+define Package/v2ray-geosite-full/install
+	$(INSTALL_DIR) $(1)/usr/share/v2ray
+	$(INSTALL_DATA) $(DL_DIR)/$(GEOSITE_LITE_FILE) $(1)/usr/share/v2ray/geosite.dat
+endef
+
+$(eval $(call BuildPackage,v2ray-geoip-lite))
+$(eval $(call BuildPackage,v2ray-geosite-lite))
+$(eval $(call BuildPackage,v2ray-geoip-full))
+$(eval $(call BuildPackage,v2ray-geosite-full))
\ No newline at end of file
diff --git a/zerotier/Makefile b/zerotier/Makefile
index c64cfd1..e4845cf 100644
--- a/zerotier/Makefile
+++ b/zerotier/Makefile
@@ -76,7 +76,7 @@ ifeq ($(CONFIG_ZEROTIER_ENABLE_SELFTEST),y)
 	$(INSTALL_BIN) $(PKG_BUILD_DIR)/zerotier-selftest $(1)/usr/bin/
 endif
 
-	$(CP) ./files/* $(1)/
+	# $(CP) ./files/* $(1)/
 endef
 
 $(eval $(call BuildPackage,zerotier))
diff --git a/zerotier/files/etc/config/zerotier b/zerotier/files/etc/config/zerotier
deleted file mode 100644
index 34b1ad3..0000000
--- a/zerotier/files/etc/config/zerotier
+++ /dev/null
@@ -1,20 +0,0 @@
-
-config zerotier sample_config
-	option enabled 0
-
-	# persistent configuration folder (for ZT controller mode)
-	#option config_path '/etc/zerotier'
-	# copy <config_path> to RAM to prevent writing to flash (for ZT controller mode)
-	#option copy_config_path '1'
-
-	#option port '9993'
-
-	# path to the local.conf
-	#option local_conf '/etc/zerotier.conf'
-
-	# Generate secret on first start
-	option secret ''
-
-	# Join a public network called Earth
-	list join '8056c2e21c000001'
-	#list join '<other_network>'
diff --git a/zerotier/files/etc/init.d/zerotier b/zerotier/files/etc/init.d/zerotier
deleted file mode 100755
index aebdc7d..0000000
--- a/zerotier/files/etc/init.d/zerotier
+++ /dev/null
@@ -1,130 +0,0 @@
-#!/bin/sh /etc/rc.common
-
-START=90
-
-USE_PROCD=1
-
-PROG=/usr/bin/zerotier-one
-CONFIG_PATH=/var/lib/zerotier-one
-
-section_enabled() {
-	config_get_bool enabled "$1" 'enabled' 0
-	[ $enabled -ne 0 ]
-}
-
-start_instance() {
-	local cfg="$1"
-	local port secret config_path local_conf copy_config_path path
-	local args=""
-
-	if ! section_enabled "$cfg"; then
-		echo "disabled in /etc/config/zerotier"
-		return 1
-	fi
-
-	config_get config_path $cfg 'config_path'
-	config_get port $cfg 'port'
-	config_get secret $cfg 'secret'
-	config_get local_conf $cfg 'local_conf'
-	config_get_bool copy_config_path $cfg 'copy_config_path' 0
-
-	path=${CONFIG_PATH}_$cfg
-
-	# Remove existing link or folder
-	rm -rf $path
-
-	# Create link or copy files from CONFIG_PATH to config_path
-	if [ -n "$config_path" -a "$config_path" != "$path" ]; then
-		# Create the config path to init and persist
-		if [ ! -d "$config_path" ]; then
-			echo "ZeroTier config_path does not exist: $config_path, create..."
-			mkdir -p $config_path
-		fi
-
-		# ensure that the target exists
-		mkdir -p $(dirname $path)
-
-		if [ "$copy_config_path" = "1" ]; then
-			cp -r $config_path $path
-		else
-			ln -s $config_path $path
-		fi
-	fi
-
-	mkdir -p $path/networks.d
-
-	# link latest default config path to latest config path
-	rm -f $CONFIG_PATH
-	ln -s $path $CONFIG_PATH
-
-	if [ -n "$port" ]; then
-		args="$args -p${port}"
-	fi
-
-	if [ -z "$secret" -a ! -f $path/identity.secret ]; then
-		echo "Generate secret - please wait..."
-		local sf="/tmp/zt.$cfg.secret"
-
-		zerotier-idtool generate "$sf" > /dev/null
-		[ $? -ne 0 ] && return 1
-
-		secret="$(cat $sf)"
-		rm "$sf"
-
-		uci set zerotier.$cfg.secret="$secret"
-		uci commit zerotier
-	fi
-
-	if [ -n "$secret" ]; then
-		echo "$secret" > $path/identity.secret
-		# make sure there is not previous identity.public
-		rm -f $path/identity.public
-	fi
-
-	if [ -f "$local_conf" ]; then
-		ln -s "$local_conf" $path/local.conf
-	fi
-
-	add_join() {
-		# an (empty) config file will cause ZT to join a network
-		touch $path/networks.d/$1.conf
-	}
-
-	config_list_foreach $cfg 'join' add_join
-
-	procd_open_instance
-	procd_set_param command $PROG $args $path
-	procd_set_param stderr 1
-	procd_set_param respawn
-	procd_close_instance
-}
-
-start_service() {
-	config_load 'zerotier'
-	config_foreach start_instance 'zerotier'
-}
-
-stop_instance() {
-	local cfg="$1"
-
-	# Remove existing networks
-	rm -f ${CONFIG_PATH}_${cfg}/networks.d/*.conf
-
-	# Remove existing link or folder
-	rm -rf ${CONFIG_PATH}_${cfg}
-}
-
-stop_service() {
-	config_load 'zerotier'
-	config_foreach stop_instance 'zerotier'
-	rm -f ${CONFIG_PATH}
-}
-
-reload_service() {
-	stop
-	start
-}
-
-service_triggers() {
-	procd_add_reload_trigger 'zerotier'
-}
